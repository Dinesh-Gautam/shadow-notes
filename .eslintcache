[{"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\index.js":"1","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\App.js":"2","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\MainInput.js":"3","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\inputOptions.js":"4","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\InputField.js":"5","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\elements\\Button.js":"6","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\elements\\List.js":"7","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\InputContext.js":"8","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\InputSelect.js":"9","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\context\\AuthContext.js":"10","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\firebase.js":"11","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\signIn\\SignWithGoogle.js":"12","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\context\\DatabaseContext.js":"13","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\elements\\ColorAdditons.js":"14","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\elements\\DropDown.js":"15","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainOutput\\MainOutput.js":"16","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainOutput\\OutputTemplet.js":"17","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainOutput\\smallComponents\\AdditionalButtons.jsx":"18","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\elements\\UseSvg.jsx":"19","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\OutputFilters\\outputFilter.jsx":"20","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\OutputFilters\\OutputFilter.jsx":"21","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\OutputFilters\\filterComponents\\TrashBtn.jsx":"22","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\OutputFilters\\filterComponents\\ColorFilter.jsx":"23","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\OutputFilters\\filterComponents\\SearchFilter.jsx":"24","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\Trash.jsx":"25","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\elements\\Separator.jsx":"26","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\elements\\Loading.jsx":"27","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\UserInfo.jsx":"28"},{"size":292,"mtime":1619268017665,"results":"29","hashOfConfig":"30"},{"size":1447,"mtime":1630837021219,"results":"31","hashOfConfig":"30"},{"size":562,"mtime":1630166951367,"results":"32","hashOfConfig":"30"},{"size":1422,"mtime":1619606058698,"results":"33","hashOfConfig":"30"},{"size":3794,"mtime":1630785258328,"results":"34","hashOfConfig":"30"},{"size":179,"mtime":1611751779327,"results":"35","hashOfConfig":"30"},{"size":1186,"mtime":1630154117776,"results":"36","hashOfConfig":"30"},{"size":5653,"mtime":1630846058999,"results":"37","hashOfConfig":"30"},{"size":3030,"mtime":1630845888280,"results":"38","hashOfConfig":"30"},{"size":1180,"mtime":1630418954050,"results":"39","hashOfConfig":"30"},{"size":1106,"mtime":1630419821848,"results":"40","hashOfConfig":"30"},{"size":1810,"mtime":1630782109758,"results":"41","hashOfConfig":"30"},{"size":2390,"mtime":1630498724980,"results":"42","hashOfConfig":"30"},{"size":2390,"mtime":1630786264660,"results":"43","hashOfConfig":"30"},{"size":1377,"mtime":1630594138491,"results":"44","hashOfConfig":"30"},{"size":3837,"mtime":1630840426289,"results":"45","hashOfConfig":"30"},{"size":1540,"mtime":1630594392183,"results":"46","hashOfConfig":"30"},{"size":3485,"mtime":1630845130024,"results":"47","hashOfConfig":"30"},{"size":4828,"mtime":1630783154918,"results":"48","hashOfConfig":"30"},{"size":400,"mtime":1630163677623,"results":"49","hashOfConfig":"30"},{"size":2303,"mtime":1630775867259,"results":"50","hashOfConfig":"30"},{"size":1973,"mtime":1630233436941,"results":"51","hashOfConfig":"30"},{"size":3325,"mtime":1630836302532,"results":"52","hashOfConfig":"30"},{"size":1500,"mtime":1630773266569,"results":"53","hashOfConfig":"30"},{"size":2702,"mtime":1630836994213,"results":"54","hashOfConfig":"30"},{"size":168,"mtime":1630414175199,"results":"55","hashOfConfig":"30"},{"size":225,"mtime":1630771893543,"results":"56","hashOfConfig":"30"},{"size":759,"mtime":1630850988190,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"7550wm",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\index.js",[],["122","123"],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\App.js",["124"],"import React, { useState } from \"react\";\r\nimport Loading from \"./components/elements/Loading\";\r\nimport Separator from \"./components/elements/Separator\";\r\nimport { InputContext } from \"./components/MainInput/InputContext\";\r\nimport MainInput from \"./components/MainInput/MainInput\";\r\nimport MainOutput from \"./components/MainOutput/MainOutput\";\r\nimport OutputFilter from \"./components/OutputFilters/OutputFilter\";\r\nimport SignWithGoogle from \"./components/signIn/SignWithGoogle\";\r\nimport UserInfo from \"./components/UserInfo\";\r\nimport { useAuth } from \"./context/AuthContext\";\r\nimport { DatabaseContext } from \"./context/DatabaseContext\";\r\n\r\nimport \"./styles/styles.css\";\r\n// import \"./styles/MainOutput/mainOutput.css\";\r\n\r\nfunction App() {\r\n  const { currentUser } = useAuth();\r\n  const [userDisplay, setuserDisplay] = useState(false);\r\n  return (\r\n    <main>\r\n      {!currentUser ? (\r\n        <SignWithGoogle />\r\n      ) : (\r\n        <DatabaseContext>\r\n          <InputContext>\r\n            <div className=\"mainContainer\">\r\n              <MainInput />\r\n              <OutputFilter\r\n                userDisplay={userDisplay}\r\n                setuserDisplay={setuserDisplay}\r\n              />\r\n              <Separator type=\"horizontal-bold\" />\r\n              <MainOutput />\r\n            </div>\r\n            {userDisplay && <UserInfo />}\r\n          </InputContext>\r\n        </DatabaseContext>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\MainInput.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\inputOptions.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\InputField.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\elements\\Button.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\elements\\List.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\InputContext.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\InputSelect.js",["125"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { edit, input_context } from \"../InputContext\";\r\nimport Button from \"./elements/Button\";\r\nimport InputField from \"./InputField\";\r\nimport { inputOptions } from \"./inputOptions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport UseSvg from \"../../elements/UseSvg\";\r\n\r\nfunction InputSelect() {\r\n  const [inputSelect, setinputSelect] = useState(\"title\");\r\n  const [disableColorSelect, setdisableColorSelect] = useState(false);\r\n  const {\r\n    inputs,\r\n    inputsDispatch,\r\n    inputValueDispatch,\r\n    setisEditMode,\r\n    isEditMode,\r\n  } = useContext(input_context);\r\n\r\n  const inputAdderHandler = () => {\r\n    const uid = uuidv4();\r\n\r\n    const selectedInput = inputOptions.find(\r\n      (input) => input.value.toLowerCase() === inputSelect.toLowerCase()\r\n    );\r\n\r\n    inputsDispatch({ type: \"addElement\", payload: { id: uid, selectedInput } });\r\n\r\n    if (selectedInput.name === \"color_input_value\") {\r\n      inputValueDispatch({\r\n        type: \"normalValue\",\r\n        payload: { id: uid, value: selectedInput.inputValue },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inputs.some((e) => e.name === \"color_input_value\")) {\r\n      setdisableColorSelect(true);\r\n      setinputSelect(\"title\");\r\n    } else {\r\n      setdisableColorSelect(false);\r\n    }\r\n  }, [inputs]);\r\n\r\n  return (\r\n    <div className=\"input_select_container\">\r\n      <div className=\"input_fields\">\r\n        {inputs.map((input) => {\r\n          return <InputField key={input.id} input={input} />;\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"input_selection\">\r\n        <select\r\n          value={inputSelect}\r\n          onChange={(e) => setinputSelect(e.target.value)}\r\n          name=\"inputs_options\"\r\n        >\r\n          {inputOptions.map((inputType) => {\r\n            if (inputType.name === \"color_input_value\" && disableColorSelect) {\r\n              console.log(disableColorSelect);\r\n              return null;\r\n            } else {\r\n              return (\r\n                <option key={inputType.name} value={inputType.value}>\r\n                  {inputType.value}\r\n                </option>\r\n              );\r\n            }\r\n          })}\r\n        </select>\r\n        <Button\r\n          attr={{ onClick: inputAdderHandler }}\r\n          text={<UseSvg type=\"add\" />}\r\n        />\r\n        <div className=\"input_main_button\">\r\n          {isEditMode.edit && (\r\n            <Button\r\n              attr={{\r\n                onClick: () => {\r\n                  setisEditMode(false);\r\n                  inputsDispatch({\r\n                    type: \"clear\",\r\n                  });\r\n                  inputValueDispatch({\r\n                    type: \"clear\",\r\n                  });\r\n                },\r\n              }}\r\n              text=\"Cancel\"\r\n            />\r\n          )}\r\n          <Button\r\n            attr={{ type: \"submit\" }}\r\n            text={isEditMode.edit ? \"Done\" : \"Submit\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputSelect;\r\n","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\context\\AuthContext.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\firebase.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\signIn\\SignWithGoogle.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\context\\DatabaseContext.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainInput\\inputs\\elements\\ColorAdditons.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\elements\\DropDown.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainOutput\\MainOutput.js",["126"],"import React from \"react\";\r\nimport { useData } from \"../../context/DatabaseContext\";\r\nimport DropDown from \"../elements/DropDown\";\r\nimport Loading from \"../elements/Loading\";\r\nimport Button from \"../MainInput/inputs/elements/Button\";\r\nimport OutputTemplet from \"./OutputTemplet\";\r\nimport AdditionalButtons from \"./smallComponents/AdditionalButtons\";\r\n\r\nfunction MainOutput() {\r\n  const { filtererdUserData, userData: originalData } = useData();\r\n  const outputFilterString = \"Results For\";\r\n  const userData =\r\n    Object.keys(filtererdUserData).length > 0\r\n      ? originalData &&\r\n        originalData.filter(({ data }) => {\r\n          return Object.keys(filtererdUserData).every((filter) => {\r\n            if (filter === \"colorFIlter\") {\r\n              return data.some(\r\n                (dataFields) =>\r\n                  dataFields.name === \"color_input_value\" &&\r\n                  dataFields.inputValue === filtererdUserData.colorFIlter\r\n              );\r\n            } else if (filter === \"searchFilter\") {\r\n              return data.some((dataFields) => {\r\n                if (dataFields.name === \"list_input_value\") {\r\n                  return dataFields.inner.some((listValue) => {\r\n                    return RegExp(filtererdUserData[filter].toLowerCase()).test(\r\n                      listValue.toLowerCase()\r\n                    );\r\n                  });\r\n                } else {\r\n                  return RegExp(filtererdUserData[filter].toLowerCase()).test(\r\n                    dataFields.inputValue.toLowerCase()\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          });\r\n        })\r\n      : originalData;\r\n\r\n  return (\r\n    <div className=\"mainoutput_container\">\r\n      {Object.keys(filtererdUserData).length > 0 ? (\r\n        <span className=\"output_filter_label\">\r\n          {filtererdUserData.colorFIlter && (\r\n            <div className=\"color_filter_container output\">\r\n              {outputFilterString}\r\n              <Button\r\n                attr={{\r\n                  value: filtererdUserData.colorFIlter,\r\n                  name: \"color_input_value\",\r\n                  style: { backgroundColor: filtererdUserData.colorFIlter },\r\n                  className: \"random-color-btn colro-btn\",\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {filtererdUserData.searchFilter &&\r\n            `${\r\n              Object.keys(filtererdUserData).length < 2\r\n                ? outputFilterString\r\n                : \" and\"\r\n            } \"${filtererdUserData.searchFilter}\"`}\r\n        </span>\r\n      ) : null}\r\n      <div className=\"mainoutput_wraper\">\r\n        {!userData ? (\r\n          Array(10)\r\n            .fill(\"\")\r\n            .map((e, i) => <Loading key={i} type=\"simple-card\" />)\r\n        ) : userData.length < 1 ? (\r\n          <span> Nothing Here. </span>\r\n        ) : (\r\n          userData.map(({ data, id, publishDate }) => {\r\n            const headingText = data.find(\r\n              (data) => data.name === \"heading_input_value\"\r\n            );\r\n            const DropdownBackgroundColor = data.find(\r\n              (data) => data.name === \"color_input_value\"\r\n            );\r\n            return (\r\n              <DropDown\r\n                key={id}\r\n                extraButtons={<AdditionalButtons userData={data} docId={id} />}\r\n                DropdownBackgroundColor={\r\n                  DropdownBackgroundColor && DropdownBackgroundColor.inputValue\r\n                }\r\n                mainText={headingText.inputValue}\r\n              >\r\n                <OutputTemplet\r\n                  publishDate={publishDate}\r\n                  userData={data}\r\n                  docId={id}\r\n                />\r\n              </DropDown>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainOutput;\r\n","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainOutput\\OutputTemplet.js",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\MainOutput\\smallComponents\\AdditionalButtons.jsx",["127"],"import React from \"react\";\r\nimport { useData } from \"../../../context/DatabaseContext\";\r\nimport UseSvg from \"../../elements/UseSvg\";\r\nimport { headingId, useInputs } from \"../../MainInput/InputContext\";\r\nimport { inputOptions } from \"../../MainInput/inputs/inputOptions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Button from \"../../MainInput/inputs/elements/Button\";\r\nimport Separator from \"../../elements/Separator\";\r\n\r\nfunction AdditionalButtons({ docId, userData }) {\r\n  const { inputsDispatch, inputValueDispatch, isEditMode, setisEditMode } =\r\n    useInputs();\r\n\r\n  const { updateData_firestore } = useData();\r\n\r\n  const editButtonHandler = () => {\r\n    setisEditMode((prev) => {\r\n      return { edit: true, editParameters: docId };\r\n    });\r\n    inputsDispatch({\r\n      type: \"clear\",\r\n    });\r\n    inputValueDispatch({\r\n      type: \"clear\",\r\n    });\r\n\r\n    userData.forEach((e) => {\r\n      const { inputValue, name, id } = e;\r\n\r\n      const selectedInput = inputOptions.find((input) => input.name === name);\r\n\r\n      const firsInputId = uuidv4();\r\n\r\n      if (selectedInput) {\r\n        switch (name) {\r\n          case \"list_input_value\":\r\n            inputsDispatch({\r\n              type: \"addElement\",\r\n              payload: {\r\n                id: id,\r\n                selectedInput: {\r\n                  ...selectedInput,\r\n                  inner: [{ ...selectedInput.inner[0], id: firsInputId }],\r\n                },\r\n              },\r\n            });\r\n\r\n            e.inner.forEach((listInputValue, index) => {\r\n              const uid = uuidv4();\r\n\r\n              if (index < 1) {\r\n                inputValueDispatch({\r\n                  type: \"listValue\",\r\n                  payload: {\r\n                    parentId: id,\r\n                    childrenId: firsInputId,\r\n                    value: listInputValue,\r\n                  },\r\n                });\r\n              } else {\r\n                inputsDispatch({\r\n                  payload: { id, listId: uid },\r\n                  type: \"addListElement\",\r\n                });\r\n                inputValueDispatch({\r\n                  type: \"listValue\",\r\n                  payload: {\r\n                    parentId: id,\r\n                    childrenId: uid,\r\n                    value: listInputValue,\r\n                  },\r\n                });\r\n              }\r\n            });\r\n            break;\r\n\r\n          default:\r\n            inputsDispatch({\r\n              type: \"addElement\",\r\n              payload: { id: id, selectedInput },\r\n            });\r\n            inputValueDispatch({\r\n              type: \"normalValue\",\r\n              payload: { id: id, value: inputValue },\r\n            });\r\n            break;\r\n        }\r\n      } else {\r\n        if (name === \"heading_input_value\") {\r\n          console.log(headingId);\r\n          inputValueDispatch({\r\n            type: \"normalValue\",\r\n            payload: { id: headingId, value: inputValue },\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown_extraButtons\">\r\n      <Button\r\n        attr={{\r\n          onClick: editButtonHandler,\r\n        }}\r\n        text={<UseSvg type=\"edit\" />}\r\n      />\r\n      <Separator type=\"vertical-medium\" />\r\n      <button\r\n        onClick={() => {\r\n          const data = {\r\n            delete: true,\r\n          };\r\n          updateData_firestore(docId, data);\r\n        }}\r\n      >\r\n        <UseSvg type=\"close\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdditionalButtons;\r\n","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\elements\\UseSvg.jsx",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\OutputFilters\\outputFilter.jsx",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\OutputFilters\\OutputFilter.jsx",["128"],"import React, { useState } from \"react\";\r\nimport TrashBtn from \"./filterComponents/TrashBtn\";\r\nimport ColorFilter from \"./filterComponents/ColorFilter\";\r\nimport SearchFilter from \"./filterComponents/SearchFilter\";\r\nimport { useData } from \"../../context/DatabaseContext\";\r\nimport Button from \"../MainInput/inputs/elements/Button\";\r\nimport UseSvg from \"../elements/UseSvg\";\r\n\r\nfunction OutputFilter({ userDisplay, setuserDisplay }) {\r\n  const { trashData, settrashData, userData, setfiltererdUserData } = useData();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search_filters\">\r\n        <TrashBtn data={trashData} setData={settrashData} />\r\n        {userData && userData.length > 0 && (\r\n          <ColorFilter\r\n            appliedColors={\r\n              userData &&\r\n              userData\r\n                .map(({ data }) => {\r\n                  const colorValue = data.find(\r\n                    (dataValue) => dataValue.name === \"color_input_value\"\r\n                  );\r\n                  if (colorValue) {\r\n                    return colorValue.inputValue;\r\n                  } else {\r\n                    return false;\r\n                  }\r\n                })\r\n                .filter((e) => e)\r\n            }\r\n            data={userData}\r\n            setData={setfiltererdUserData}\r\n          />\r\n        )}\r\n        {userData && userData.length > 0 && (\r\n          <SearchFilter setData={setfiltererdUserData} />\r\n        )}\r\n        <Button\r\n          attr={{\r\n            className: \"user-info-btn\",\r\n            onClick: () => {\r\n              setuserDisplay((prev) => !prev);\r\n            },\r\n          }}\r\n          text={\r\n            userDisplay ? (\r\n              <UseSvg type=\"close\" />\r\n            ) : (\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                height=\"24px\"\r\n                viewBox=\"0 0 24 24\"\r\n                width=\"24px\"\r\n                fill=\"#000000\"\r\n              >\r\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n                <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n              </svg>\r\n            )\r\n          }\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OutputFilter;\r\n","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\OutputFilters\\filterComponents\\TrashBtn.jsx",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\OutputFilters\\filterComponents\\ColorFilter.jsx",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\OutputFilters\\filterComponents\\SearchFilter.jsx",["129"],"import React, { useRef } from \"react\";\r\nimport Separator from \"../../elements/Separator\";\r\nimport UseSvg from \"../../elements/UseSvg\";\r\nimport Button from \"../../MainInput/inputs/elements/Button\";\r\n\r\nfunction SearchFilter({ setData }) {\r\n  const input = useRef(null);\r\n\r\n  const handleSearchFilter = (e) => {\r\n    const value = e.target.value;\r\n    if (value.trim() === \"\") {\r\n      setData((prev) => {\r\n        delete prev.searchFilter;\r\n        return { ...prev };\r\n      });\r\n    } else {\r\n      setData((prev) => {\r\n        return { ...prev, searchFilter: value };\r\n      });\r\n    }\r\n  };\r\n  const handleSearchClear = () => {\r\n    input.current.value = \"\";\r\n    handleSearchFilter({ target: { value: \"\" } });\r\n  };\r\n  return (\r\n    <div className=\"filter-by-search\">\r\n      {/* !! DONT REMOVE BELOW CODE  !! */}\r\n\r\n      {/* <select name=\"search-select\">\r\n        <option value=\"all\">all</option>\r\n      </select> */}\r\n      {/* <Separator type=\"vertical-medium\" /> */}\r\n\r\n      <input\r\n        ref={input}\r\n        onChange={handleSearchFilter}\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n      />\r\n      <Button\r\n        attr={{\r\n          onClick: handleSearchClear,\r\n          className: \"search_clear_button\",\r\n          style: {\r\n            display: input.current?.value.length > 0 ? \"flex\" : \"none\",\r\n          },\r\n        }}\r\n        text={<UseSvg type=\"close\" />}\r\n      />\r\n      <Button text={<UseSvg type=\"search\" />} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchFilter;\r\n","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\Trash.jsx",["130"],"import React from \"react\";\r\nimport { useData } from \"../context/DatabaseContext\";\r\nimport DropDown from \"./elements/DropDown\";\r\nimport Loading from \"./elements/Loading\";\r\nimport Separator from \"./elements/Separator\";\r\nimport UseSvg from \"./elements/UseSvg\";\r\nimport Button from \"./MainInput/inputs/elements/Button\";\r\nimport { inputOptions } from \"./MainInput/inputs/inputOptions\";\r\nimport OutputTemplet from \"./MainOutput/OutputTemplet\";\r\n\r\nfunction Trash({ trashData, displayState, setdisplayState }) {\r\n  const { updateData_firestore } = useData();\r\n  return (\r\n    <div id=\"trash\" style={{ display: displayState }}>\r\n      <div className=\"trash_header\">\r\n        <h1>Trash</h1>\r\n        <Button\r\n          attr={{\r\n            onClick: (e) => {\r\n              setdisplayState(\"none\");\r\n            },\r\n          }}\r\n          text={<UseSvg type=\"close\" />}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"trash_content_container\">\r\n        <div className=\"trash_content\">\r\n          {!trashData ? (\r\n            Array(10)\r\n              .fill(\"\")\r\n              .map((e, i) => <Loading key={i} type=\"simple-card\" />)\r\n          ) : trashData.length > 0 ? (\r\n            trashData.map(({ data, id }) => {\r\n              const headingText = data.find(\r\n                (data) => data.name === \"heading_input_value\"\r\n              );\r\n              const DropdownBackgroundColor = data.find(\r\n                (data) => data.name === \"color_input_value\"\r\n              );\r\n              return (\r\n                <DropDown\r\n                  key={id}\r\n                  extraButtons={\r\n                    <button\r\n                      onClick={() => {\r\n                        const data = {\r\n                          delete: false,\r\n                        };\r\n                        updateData_firestore(id, data);\r\n                      }}\r\n                    >\r\n                      Restore\r\n                    </button>\r\n                  }\r\n                  DropdownBackgroundColor={\r\n                    DropdownBackgroundColor &&\r\n                    DropdownBackgroundColor.inputValue\r\n                  }\r\n                  mainText={headingText.inputValue}\r\n                >\r\n                  {data.some((e) => {\r\n                    return inputOptions.some(\r\n                      (option) =>\r\n                        option.name === e.name && e.name !== \"color_input_value\"\r\n                    );\r\n                  }) && <OutputTemplet userData={data} />}\r\n                </DropDown>\r\n              );\r\n            })\r\n          ) : (\r\n            <span>Nothing in the Trash</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Trash;\r\n","E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\elements\\Separator.jsx",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\elements\\Loading.jsx",[],"E:\\html projects\\List app 2.0 form scratch\\list-app-react-2.0\\src\\components\\UserInfo.jsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":15},{"ruleId":"135","severity":1,"message":"139","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":16,"column":64,"nodeType":"142","messageId":"143","endLine":16,"endColumn":66},{"ruleId":"135","severity":1,"message":"144","line":11,"column":47,"nodeType":"137","messageId":"138","endLine":11,"endColumn":57},{"ruleId":"135","severity":1,"message":"145","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"146","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":17},{"ruleId":"135","severity":1,"message":"146","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":17},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","'edit' is defined but never used.","array-callback-return","Array.prototype.every() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isEditMode' is assigned a value but never used.","'useState' is defined but never used.","'Separator' is defined but never used.","no-global-assign","no-unsafe-negation"]